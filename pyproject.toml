[tool.poetry]
name = "django-salesman"
version = "1.2.1"
description = "Headless e-commerce framework for Django and Wagtail."
authors = ["Dino Perovic <dino.perovic@gmail.com>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://pypi.org/project/django-salesman/"
repository = "https://github.com/dinoperovic/django-salesman"
documentation = "https://django-salesman.readthedocs.io"
keywords = ["e-commerce", "headless", "rest-api", "shop", "framework"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 4",
    "Framework :: Wagtail :: 5",
    "Framework :: Wagtail :: 6",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Internet",
]
packages = [
    {include = "salesman"},
]
include = ["LICENSE"]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
django = ">=4.1.3,<4.3"
djangorestframework = ">=3.11.1,<4.0"

# Optional
Pygments = {version = "^2.6", optional = true}
wagtail = {version = ">=4.0,<7.0", optional = true}
wagtail_modeladmin = {version = ">=2.0", optional = true}
pytest = {version = "~7.3.1", optional = true}
pytest-django = {version = "~4.5.2", optional = true}
pytest-cov = {version = "~4.0.0", optional = true}
sphinx = {version = "~6.2.1", optional = true}
sphinx-rtd-theme = {version = "~1.2.0", optional = true}
sphinx-autobuild = {version = "~2021.3.14", optional = true}
sphinxcontrib-httpdomain = {version = "~1.8.1", optional = true}

[tool.poetry.dev-dependencies]
pre-commit = "*"
isort = "~5.12.0"
black = "~23.3.0"
flake8 = "~6.0.0"
mypy = "~1.2.0"

[tool.poetry.extras]
pygments = ["Pygments"]
example = ["Pygments", "wagtail", "wagtail_modeladmin"]
tests = ["Pygments", "wagtail", "wagtail_modeladmin", "pytest", "pytest-django", "pytest-cov"]
docs = ["wagtail", "wagtail_modeladmin", "sphinx", "sphinx-rtd-theme", "sphinx-autobuild", "sphinxcontrib-httpdomain"]

[tool.isort]
profile = "black"
known_first_party = ["salesman", "shop"]
known_third_party = ["rest_framework", "wagtail", "wagtail_modeladmin", "pytest"]

[tool.mypy]
exclude = ["example"]
ignore_missing_imports = true
# Strict
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = false
no_implicit_reexport = true
strict_equality = true

[tool.pyright]
typeCheckingMode = "off"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
